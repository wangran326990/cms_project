package com.cms.core.dao;

import static org.junit.Assert.*;

import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Arrays;
import java.util.List;

import org.junit.Test;

import com.cms.basic.util.EnumUtil;
import com.cms.core.model.ChannelType;
import com.cms.core.model.RoleType;
import com.cms.core.test.util.EntitiesHelper;

public class TestEnum {

	@Test
	public void testEnumToName() {
		List<String> actuals = Arrays.asList("ROLE_ADMIN", "ROLE_PUBLISHER", "ROLE_AUDIT");
		List<String> expected = EnumUtil.enumToName(RoleType.class);
		EntitiesHelper.assertObjects(expected, actuals);
	}
	@Test
	public void testEnumProp(){
		Class<? extends Enum> clz = ChannelType.class;
		String MethodName = "getName";
		//if(!clz.isEnum()) return null;
		Enum[] enums = clz.getEnumConstants();
		
		try {
			Method method = clz.getMethod(MethodName, null);
			for(Enum en: enums){
				Field field;
				try {
					field = clz.getField(en.name());
				} catch (NoSuchFieldException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				try {
					System.out.println(method.invoke(null, field.get(null)));
				} catch (IllegalAccessException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IllegalArgumentException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (InvocationTargetException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
		} catch (NoSuchMethodException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
