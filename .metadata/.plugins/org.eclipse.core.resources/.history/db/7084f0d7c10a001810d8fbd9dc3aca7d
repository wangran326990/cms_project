package com.cms.core.dao;


import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import com.cms.basic.dao.BaseDao;
import com.cms.basic.model.Pager;
import com.cms.core.model.CmsLink;

public class CmsLinkDao extends BaseDao<CmsLink> implements ICmsLinkDao {

	
	
	@Override
	public CmsLink add(CmsLink t) {
			Map<String, Integer> map =this.getMinAndMaxPos();
			if(map.get("max")==null){
				t.setPos(1);
			}else{
				t.setPos(map.get("max")+1);
			}
			return super.add(t);
	}
	
	@Override
	public void delete(int id) {
		CmsLink cl =this.load(id);
		int pos = cl.getPos();
		super.delete(id);
		String hql = "update CmsLink set pos=pos-1 where pos >?";
		this.getSession().createQuery(hql).setParameter(0, pos).executeUpdate();
		
	}
	
	@Override
	public Pager<CmsLink> findByType(String type) {
		String hql;
		Pager<CmsLink> links=null;
		if(type==null){
			hql = "from CmsLink";
			hql+=" order by pos";
			links=this.find(hql);
		}
		else{
			hql = "from CmsLink where CmsLink.type Like %?%";
			hql+=" order by pos";
			links=this.find(hql, type);
			
		}
		return links;
	}

	@Override
	public List<CmsLink> listByType(String type) {
		
		return this.list("from CmsLink where CmsLink.type=? order by pos", type);
	}

	@Override
	public List<String> listAllType() {
		String hql = "select distinct cl.type from CmsLink cl order by pos";
		List<CmsLink> links = this.list(hql);
		List<String> res =links.stream().map(link->link.getType()).collect(Collectors.toList());
		return res;
	}

	@Override
	public Map<String, Integer> getMinAndMaxPos() {
		String hql = "select max(pos),min(pos) from CmsLink";
		Object[] objs = (Object[])this.getSession().createQuery(hql).uniqueResult();
		Map<String,Integer> m = new HashMap<String,Integer>();
		m.put("min", (Integer)objs[1]);
		m.put("max", (Integer)objs[0]);
		return m;
	}

	@Override
	public void updatePos(int id, int oldPos, int newPos) {
		CmsLink cl = this.load(id);
		if(oldPos==newPos) {
			return;
		}
		String hql = "";
		if(oldPos<newPos) {
			hql = "update CmsLink set pos=pos-1 where pos>? and pos<=?";
		} else {
			hql = "update CmsLink set pos=pos+1 where pos<? and pos>=?";
		}
		this.getSession().createQuery(hql)
			.setParameter(0, oldPos)
			.setParameter(1, newPos).executeUpdate();
		cl.setPos(newPos);
		this.update(cl);
	}

}
