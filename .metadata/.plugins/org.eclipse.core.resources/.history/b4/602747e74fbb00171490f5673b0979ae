package com.cms.web.controllers;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.cms.basic.model.Pager;
import com.cms.core.model.Group;
import com.cms.service.IGroupService;

@Controller
@RequestMapping("/admin/group")
public class GroupController {
	
	
	private IGroupService groupService;
	
	public IGroupService getGroupService() {
		return groupService;
	}
	@Resource(name="groupService")
	public void setGroupService(IGroupService groupService) {
		this.groupService = groupService;
	}
	@RequestMapping("/groups")
	public String list(Model model){
		
		Pager<Group> groups =groupService.findGroup();
		model.addAttribute("datas", groups);
		return "group/list";
	}
	@RequestMapping(value="/add", method=RequestMethod.GET)
	public String add(Model model){
		model.addAttribute("group", new Group());
		return "group/add";
	}
	
	@RequestMapping(value="/add", method=RequestMethod.POST)
	public String add(@Validated Group group, BindingResult br){
		if(br.hasErrors()){
			return "group/add";
		}	
		groupService.add(group);
		return "redirect:/admin/group/groups";
	}
	
	@RequestMapping(value="/update/{id}", method=RequestMethod.GET)
	public String update(@PathVariable int id,Model model){
		Group group = groupService.load(id);
		model.addAttribute("group", group);
		return "group/update";
	}
	
	@RequestMapping(value="/update/{id}", method=RequestMethod.POST)
	public String update(@PathVariable int id, @Validated Group group, BindingResult br){
		if(br.hasErrors()){
			return "group/update";
		}
		//user update can update transit object
		groupService.update(group);
		return "redirect:/admin/group/groups";
	}
	
	@RequestMapping(value="/update/{id}", method=RequestMethod.GET)
	public String update(@PathVariable int id,Model model){
		Group group = groupService.load(id);
		model.addAttribute("group", group);
		return "group/update";
	}
	
	@RequestMapping(value="/update/{id}", method=RequestMethod.POST)
	public String update(@PathVariable int id, @Validated Group group, BindingResult br){
		if(br.hasErrors()){
			return "group/update";
		}
		//user update can update transit object
		groupService.update(group);
		return "redirect:/admin/group/groups";
	}
}
